name: Upload to PyPI and publish documentation

on:
  release:
    types: [published]
  workflow_dispatch:
  workflow_call:
    secrets:
      PYPI_USER:
        required: true
      PYPI_PASSWORD:
        required: true

jobs:
  push_to_pypi:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,cicd]"
      - name: Build and publish
        run: |
          tox -e build
          python -m twine check dist/*
          python -m twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  publish_docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev, docs]"
          sudo apt-get install graphviz
      - name: Checkout latest tagged commit
        run: |
          git checkout $(git describe --tags --abbrev=0)
      - name: Build docs
        run: |
          tox -e docs
          touch build/sphinx/html/.nojekyll  # allow underscores in URL path
      - name: Publish to gh-pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/sphinx/html

  gen_licenses_info:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pip-licenses
      - name: Generate license information for dependencies
        run: |
          pip-licenses --format=confluence --with-urls > licenses.txt
          cat -n licenses.txt | sort -uk2 | sort -n | cut -f2- > tmp && mv tmp licenses.txt  # remove duplicate lines
      - name: Upload license information artifact
        uses: actions/upload-artifact@v3
        with:
          name: dependencies-licenses
          path: licenses.txt
